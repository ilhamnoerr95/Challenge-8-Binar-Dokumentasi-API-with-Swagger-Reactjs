{
  "swagger": "2.0",
  "info": {
    "description": "Full Rest API Challenge binar Chapter 8.",
    "version": "1.0.0",
    "title": "Rest Api Challenge Binar 8",
    "termsOfService": "https://localhost://5000/",
    "contact": {
      "email": "noerr.ilham@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost.com",
  "basePath": "/api",
  "tags": [
    {
      "name": "players",
      "description": "Everything About Players Game"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/api/players": {
      "post": {
        "tags": [
          "players"
        ],
        "summary": "Add new Player",
        "description": "Create New",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create New PLayers",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "ilhamnoerr"
                },
                "email": {
                  "type": "string",
                  "example": "noerr@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "asdqwe123"
                },
                "experience": {
                  "type": "integer",
                  "example": 2
                },
                "lvl": {
                  "type": "integer",
                  "example": 10
                }
              }
            }
          }
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "SUCCESS!"
          },
          "500": {
            "description": "Failed"
          }
        }
      },
      "get": {
        "tags": [
          "players"
        ],
        "summary": "find all players",
        "description": "get all players",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "SUCCESS!"
          },
          "500": {
            "description": "Some error occurred while retrieving players.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "ilhamnoerr"
                  },
                  "email": {
                    "type": "string",
                    "example": "noerr@gmail.com"
                  },
                  "experience": {
                    "type": "integer",
                    "example": 2
                  },
                  "lvl": {
                    "type": "integer",
                    "example": 10
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/players/{id}": {
      "get": {
        "tags": [
          "players"
        ],
        "summary": "Find Players by Id",
        "description": "return a single player",
        "operationId": "getPlayerById",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of pet to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS!"
          },
          "500": {
            "description": "FAILED!!"
          }
        }
      },
      "put": {
        "tags": [
          "players"
        ],
        "summary": "Update Player",
        "description": "This can only be done by the logged in user",
        "operationId": "updatePlayers",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "/api/players{id}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Player was updated successfully."
          },
          "400": {
            "description": "Cannot update Player with id=${id}. Maybe Player was not found or req.body is empty!"
          },
          "500": {
            "description": "Error updating Player with id={id}"
          }
        }
      },
      "delete": {
        "tags": [
          "players"
        ],
        "summary": "Delete Players by Id",
        "description": "Delete players by ID",
        "operationId": "deletePlayer",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the player that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Player was deleted Successfully!"
          },
          "400": {
            "description": "Cannot Delete playet with id=${id}. Maybe PLayer was not Found!"
          },
          "500": {
            "description": "Could Not delete Player with id"
          }
        }
      }
    }
  },
  "/api/players/exp/{id}": {
    "post": {
      "tags": [
        "players"
      ],
      "summary": "Add player experience by certain amount",
      "description": "",
      "operationId": "AddPlayers",
      "consumes": [
        "application/x-www-form-urlencoded"
      ],
      "produces": [
        "application/xml",
        "application/json"
      ],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID of pet that needs to be updated",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "Failed"
        }
      }
    }
  }
}